name: Release

on:
  workflow_dispatch:

jobs:
  create-release:
    runs-on: ubuntu-22.04
    steps:
      - name: Generate Version
        id: generate-version
        run: echo "version=$(date +'%-y.%-m.%-d')" >> "$GITHUB_OUTPUT"
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Extract Release Notes
        id: extract-release-notes
        run: |
          VERSION=$(echo "${{ steps.generate-version.outputs.version }}")
          # Try to extract section for the current version first
          RELEASE_NOTES=$(awk -v ver="$VERSION" '$0 ~ ("^## v" ver) {flag=1; next} /^## / {flag=0} flag {print}' CHANGELOG.md | sed '/^[[:space:]]*$/d')
          # If empty, fall back to [Unreleased]
          if [ -z "$RELEASE_NOTES" ]; then
            RELEASE_NOTES=$(awk '/^## \[Unreleased\]/ {flag=1; next} /^## / {flag=0} flag {print}' CHANGELOG.md | sed '/^[[:space:]]*$/d')
          fi
          echo "release_notes<<EOF" >> "$GITHUB_OUTPUT"
          echo "$RELEASE_NOTES" >> "$GITHUB_OUTPUT"
          echo "EOF" >> "$GITHUB_OUTPUT"
      - name: Create Release
        uses: actions/create-release@v1
        id: create-release
        with:
          draft: false
          prerelease: false
          release_name: v${{ steps.generate-version.outputs.version }}
          tag_name: v${{ steps.generate-version.outputs.version }}
          body: ${{ steps.extract-release-notes.outputs.release_notes }}
        env:
          GITHUB_TOKEN: ${{ github.token }}
    outputs:
      version: ${{ steps.generate-version.outputs.version }}
      upload_url: ${{ steps.create-release.outputs.upload_url }}
  build-linux-x86:
    needs: create-release
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v2
      - name: Build
        run: cd src && make -f Makefile.linux-x86.mk loda LODA_PLATFORM=linux-x86 LODA_VERSION=${{ needs.create-release.outputs.version }}
      - name: Upload
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./loda
          asset_name: loda-linux-x86
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ github.token }}
  build-linux-arm64:
    needs: create-release
    runs-on:
      - self-hosted
      - Linux
      - ARM64
    steps:
      - uses: actions/checkout@v2
      - name: Build
        run: cd src && make -f Makefile.linux-arm64.mk loda LODA_PLATFORM=linux-arm64 LODA_VERSION=${{ needs.create-release.outputs.version }}
      - name: Upload
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./loda
          asset_name: loda-linux-arm64
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ github.token }}
  build-macos-x86:
    needs: create-release
    runs-on: macos-14
    steps:
      - uses: actions/checkout@v2
      - name: Build
        run: cd src && make -f Makefile.macos-x86.mk loda LODA_PLATFORM=macos-x86 LODA_VERSION=${{ needs.create-release.outputs.version }}
      - name: Upload
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./loda
          asset_name: loda-macos-x86
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ github.token }}
  build-macos-arm64:
    needs: create-release
    runs-on: macos-14
    steps:
      - uses: actions/checkout@v2
      - name: Build
        run: cd src && make -f Makefile.macos-arm64.mk loda LODA_PLATFORM=macos-arm64 LODA_VERSION=${{ needs.create-release.outputs.version }}
      - name: Upload
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./loda
          asset_name: loda-macos-arm64
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ github.token }}
  build-windows:
    needs: create-release
    runs-on: windows-2022
    steps:
      - uses: actions/checkout@v2
      - uses: ilammy/msvc-dev-cmd@v1
      - name: Build
        run: cd src && nmake.exe /F Makefile.windows.mk loda LODA_PLATFORM=windows LODA_VERSION=${{ needs.create-release.outputs.version }}
      - name: Upload
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./loda.exe
          asset_name: loda-windows.exe
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ github.token }}
  build-windows-arm64:
    needs: create-release
    runs-on: windows-11-arm64
    steps:
      - uses: actions/checkout@v2
      - uses: ilammy/msvc-dev-cmd@v1
      - name: Build
        run: cd src && nmake.exe /F Makefile.windows-arm64.mk loda LODA_PLATFORM=windows-arm64 LODA_VERSION=${{ needs.create-release.outputs.version }}
      - name: Upload
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./loda.exe
          asset_name: loda-windows-arm64.exe
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ github.token }}
